[
    {
        "id": "ed84d3e070727412",
        "type": "tab",
        "label": "INDEX",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "74273795d1e74a6e",
        "type": "tab",
        "label": "sensoresMQTT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1fddb5bbb8ba27b8",
        "type": "tab",
        "label": "openValve",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6b946e3731be58c1",
        "type": "subflow",
        "name": "Subflow 1",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "969d8996b0110f16",
        "type": "group",
        "z": "74273795d1e74a6e",
        "name": "SIMULACION PASAJE",
        "style": {
            "label": true
        },
        "nodes": [
            "a650bf9d83e4ec4a",
            "6ab5784e6c744d2d",
            "0ac0b9d3f7b20ef1",
            "59480978506aa25e",
            "c446106c6309cc8d",
            "037577b4694f7516",
            "1076149b27138956",
            "0f379a02def92561",
            "461a6de532021279",
            "ecd44b739172d337",
            "3a4720e3968a645f",
            "d75804f66ab62f96",
            "55111d96b4599d19",
            "c067b2ee2268df33",
            "48c9d21b26acf77a",
            "8565c56ba519a0be",
            "31b8113f5e28d529",
            "d756e4ac2a0679d1",
            "14c265f16e9267eb",
            "6e84991db96a8aeb",
            "10b897910f81482b",
            "807c738004bc73a3",
            "bb6a6c959a605573"
        ],
        "x": 54,
        "y": 39,
        "w": 2072,
        "h": 382
    },
    {
        "id": "eca886a5d7cbed9d",
        "type": "group",
        "z": "ed84d3e070727412",
        "name": "MQTT PASAJE",
        "style": {
            "label": true
        },
        "nodes": [
            "f4c38b6556a8367c",
            "7ab6a756468eec78",
            "fe9ff1d4dc59e5bd",
            "ab3cc78b737a790a",
            "d81be35f7d46219d",
            "afb71e2ddc111536",
            "b98b3653f9dbb8f8",
            "afbf9c4d79d0185c",
            "689c5ff4468693e8",
            "902b1c8a928ffe6a",
            "02899c84331de550",
            "2abda30277bd5535",
            "1b5d8b8a0c3b7e77",
            "bed00d5bd4b1128d",
            "57cc4b3fec6bccff",
            "3687ee3b09b52dd2",
            "662d9e463741798e",
            "aef2b33a57ae564e",
            "98258f222ce807e5",
            "6c2321c85b7fee9e",
            "dc355fd6c0f2bfb9",
            "ab6442dca4a352a0",
            "91b9c2381652a748",
            "6d1c51736053af55",
            "3c6173d7d1582dad",
            "fbefe42c368dc1b5",
            "4867fd6968c7b4e5",
            "0ad30251fa78784a",
            "b1a718579ce91be6",
            "eb1d5441a5493e8d",
            "bccc0eb40a4e684b",
            "306d32d1ec8d7c16",
            "894d3164b6ac88be",
            "94a20f8c52bf66e3",
            "9439d99e468635cf",
            "ad12f1451bc31dda",
            "c022c5cd2337e7fa",
            "c96b90951e2d8e7b",
            "20bf5a741d78c032",
            "de890ab489854ac3",
            "a769c677763b97df",
            "1330e11901f761fb",
            "6a85c26a0847dc5e",
            "77586fe3e35bfc10",
            "abb5e44725e92a48",
            "73c323a0992f611b",
            "47c5213329ee5147",
            "1c0628dc9c34f4f0"
        ],
        "x": 14,
        "y": 419,
        "w": 2032,
        "h": 748
    },
    {
        "id": "1db8133a62cab60c",
        "type": "group",
        "z": "74273795d1e74a6e",
        "name": "SENSOR DE FUGA DE GAS AMBIENTE",
        "style": {
            "label": true
        },
        "nodes": [
            "b477bb105718138e",
            "e9174388a10ad829",
            "63f76027b3399f33",
            "7da0fb93c70ecbc9",
            "1a601e7a6d191818",
            "f813178647af73dd",
            "e53014b8fc5a1fc2",
            "86a3598925e12381"
        ],
        "x": 54,
        "y": 439,
        "w": 532,
        "h": 242
    },
    {
        "id": "3366b3234dc8cf7b",
        "type": "group",
        "z": "ed84d3e070727412",
        "name": "Widget de clima",
        "style": {
            "label": true
        },
        "nodes": [
            "b92cabac019bce89",
            "75452209a15ebcd7",
            "65ac218cfe1c5490",
            "ee729e06a0f51a57",
            "8c4c681ca32f3a98"
        ],
        "x": 14,
        "y": 319,
        "w": 872,
        "h": 82
    },
    {
        "id": "4387bad875a25044",
        "type": "group",
        "z": "ed84d3e070727412",
        "name": "Widget de fecha y hora",
        "style": {
            "label": true
        },
        "nodes": [
            "d7b57c5759641909",
            "957883066be49def",
            "22d03304d1339daa",
            "e404673525a72701",
            "6a89e6ec70116b66",
            "a5162c4aa79f7f5a"
        ],
        "x": 14,
        "y": 179,
        "w": 732,
        "h": 122
    },
    {
        "id": "1c0628dc9c34f4f0",
        "type": "group",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "Widget ventilador",
        "style": {
            "label": true
        },
        "nodes": [
            "1cace0f5ab7337a9",
            "891da69baaef99e8",
            "7df77b2c4d632e1f",
            "1d1bd6d13873be6a",
            "cc123f932a686064",
            "8c5670e652ef5ce7"
        ],
        "x": 44,
        "y": 999,
        "w": 902,
        "h": 142
    },
    {
        "id": "3e6e56dcfdf5ebfb",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.hivemq.com",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "f75a08fb9f09b8b6",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Monitor GAS",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "true",
            "allowTempTheme": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "778525b5c804be1f",
        "type": "ui_tab",
        "name": "MONITOR CIUDADES",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0449b3b1fea99d52",
        "type": "ui_tab",
        "name": "Demo",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d783cb980c3979fc",
        "type": "ui_group",
        "name": "Demo",
        "tab": "0449b3b1fea99d52",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c8562f8666449872",
        "type": "ui_group",
        "name": "Notificaciones y alertas",
        "tab": "778525b5c804be1f",
        "order": 3,
        "disp": true,
        "width": "20",
        "collapse": true,
        "className": ""
    },
    {
        "id": "dashboard-tab",
        "type": "ui_tab",
        "name": "Monitoreo",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "dashboard-group",
        "type": "ui_group",
        "name": "Alertas",
        "tab": "dashboard-tab",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "70113bd572087aab",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "d8e2becf24225cb7",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 7,
        "height": 1
    },
    {
        "id": "25e39827c9ed041e",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 8,
        "width": 5,
        "height": 1
    },
    {
        "id": "d025bcda0945d884",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 9,
        "width": 7,
        "height": 1
    },
    {
        "id": "9c3bfab2a6cadd18",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 10,
        "width": 5,
        "height": 1
    },
    {
        "id": "65f34c8373a656eb",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "97a5ddd0c9e3cf37",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "1405f52a5b527180",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "0aa3d0c967f66295",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "6f9e83e7b83e482a",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "939b68daf24e523f",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "4a28910e79dc4c65",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 20,
        "width": 3,
        "height": 1
    },
    {
        "id": "16ee6225f964e994",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 21,
        "width": 3,
        "height": 1
    },
    {
        "id": "053f6c3e0565591f",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 22,
        "width": 3,
        "height": 1
    },
    {
        "id": "074649756ea43739",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 23,
        "width": 3,
        "height": 1
    },
    {
        "id": "2c34e7cf8386caaa",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 24,
        "width": 3,
        "height": 1
    },
    {
        "id": "b6e5da2cc91fd1bf",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 25,
        "width": 3,
        "height": 1
    },
    {
        "id": "c051fe833f16b886",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 26,
        "width": 3,
        "height": 1
    },
    {
        "id": "49cf1117ca56fd29",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 27,
        "width": 3,
        "height": 1
    },
    {
        "id": "b9e0c0e2d60ab491",
        "type": "ui_tab",
        "name": "Estadisticas",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1b2646b7e26b1af9",
        "type": "ui_group",
        "name": "Ciudad 1",
        "tab": "b9e0c0e2d60ab491",
        "order": 1,
        "disp": true,
        "width": 20,
        "collapse": false,
        "className": ""
    },
    {
        "id": "d6a565f559b0906a",
        "type": "ui_group",
        "name": "Machala norte",
        "tab": "778525b5c804be1f",
        "order": 4,
        "disp": false,
        "width": 14,
        "collapse": false,
        "className": ""
    },
    {
        "id": "fb250c05fdf29f20",
        "type": "ui_group",
        "name": "Clima",
        "tab": "778525b5c804be1f",
        "order": 2,
        "disp": true,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1b4fb603c21b6c4c",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 10,
        "height": 1
    },
    {
        "id": "de221a3c0e28744e",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 7,
        "height": 1
    },
    {
        "id": "3ed9d485c786d51e",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 4,
        "height": 1
    },
    {
        "id": "4cd002e437bc4696",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "a3670f424151c935",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 8,
        "width": 5,
        "height": 1
    },
    {
        "id": "90a87e84562ec653",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 9,
        "width": 4,
        "height": 1
    },
    {
        "id": "3271f59cb6ebdfc1",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "db1c81f37f99e6f7",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 11,
        "width": 12,
        "height": 1
    },
    {
        "id": "8f4db3a10940da48",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "dcfbc8ef6244364b",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 10,
        "height": 1
    },
    {
        "id": "0992529d33bd4570",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 7,
        "height": 1
    },
    {
        "id": "0b1d9e5e9ee4adbe",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 4,
        "height": 1
    },
    {
        "id": "d17995abdb87ab03",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "a9cab67ba3e8badd",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 8,
        "width": 5,
        "height": 1
    },
    {
        "id": "c4a7ee537e743002",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 9,
        "width": 4,
        "height": 1
    },
    {
        "id": "f1eaa9fc262e931d",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "78911cca8b633447",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 11,
        "width": 12,
        "height": 1
    },
    {
        "id": "9ef6303595298cd3",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "2cc601547f7522ff",
        "type": "ui_group",
        "name": "Fecha y hora",
        "tab": "778525b5c804be1f",
        "order": 1,
        "disp": true,
        "width": 4,
        "collapse": false,
        "className": ""
    },
    {
        "id": "ad726ee97b3c56ec",
        "type": "ui_group",
        "name": "Controles",
        "tab": "778525b5c804be1f",
        "order": 5,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "b955dd51cbb95c90",
        "type": "ui_spacer",
        "z": "ed84d3e070727412",
        "name": "spacer",
        "group": "d6a565f559b0906a",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "957883066be49def",
        "type": "function",
        "z": "ed84d3e070727412",
        "g": "4387bad875a25044",
        "name": "obtenerHora",
        "func": "var fecha = new Date();\n\nmsg.hora = fecha.toLocaleTimeString(\"es-ES\", {\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit'\n});\n\nmsg.topic = \"hora\";\nmsg.payload = msg.hora;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 220,
        "wires": [
            [
                "a5162c4aa79f7f5a"
            ]
        ]
    },
    {
        "id": "22d03304d1339daa",
        "type": "inject",
        "z": "ed84d3e070727412",
        "g": "4387bad875a25044",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 220,
        "wires": [
            [
                "957883066be49def"
            ]
        ]
    },
    {
        "id": "e404673525a72701",
        "type": "inject",
        "z": "ed84d3e070727412",
        "g": "4387bad875a25044",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 260,
        "wires": [
            [
                "6a89e6ec70116b66"
            ]
        ]
    },
    {
        "id": "6a89e6ec70116b66",
        "type": "function",
        "z": "ed84d3e070727412",
        "g": "4387bad875a25044",
        "name": "obtenerFecha",
        "func": "var fecha = new Date();\n\nmsg.fecha = fecha.toLocaleDateString(\"es-ES\", {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\"\n});\n\nmsg.topic = \"fecha\";\nmsg.payload = msg.fecha;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 260,
        "wires": [
            [
                "a5162c4aa79f7f5a"
            ]
        ]
    },
    {
        "id": "99b63fa91f544066",
        "type": "ui_template",
        "z": "ed84d3e070727412",
        "group": "d783cb980c3979fc",
        "name": "Node-Red Dashboard Custom CSS",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n  body {\n    background: -webkit-linear-gradient(55deg,\n        #161616 0%,\n        #161616 50%,\n        #161616 100%);\n  }\n\n  /************************************* ui_text *************************************/\n  /* Cambiar el bold para label y value de los text */\n  .nr-dashboard-text .label {\n    font-weight: bold !important;\n  }\n\n  .nr-dashboard-text .value {\n    font-weight: normal !important;\n  }\n\n  /************************************* ui_Gauge *************************************/\n  /* Color de los gauges */\n  .nr-dashboard-gauge path {\n    fill: #ff7b00 !important;\n  }\n\n  .nr-dashboard-gauge circle {\n    fill: #ff7b00 !important;\n  }\n\n  element {\n    background: rgb(255, 106, 7);\n  }\n\n  /************************************* ui_switch *************************************/\n  /* Color del circulo del switch */\n  .nr-dashboard-theme .nr-dashboard-switch md-switch.md-checked .md-thumb {\n    background-color: #ff981d;\n  }\n\n  /* Color de la barra del switch */\n  .nr-dashboard-theme .nr-dashboard-switch md-switch.md-checked .md-bar {\n    background-color: rgb(163 113 41 / 50%);\n  }\n\n  /* template ui_switch */\n  .nr-dashboard-theme .nr-dashboard-template md-switch.md-checked:not([disabled]) .md-thumb {\n    background-color: #ffb900;\n  }\n\n  .nr-dashboard-theme .nr-dashboard-template md-switch.md-checked:not([disabled]) .md-bar {\n    background-color: rgb(255 165 22 / 50%);\n  }\n\n\n  /*Top bar*/\n  body.nr-dashboard-theme md-toolbar,\n  body.nr-dashboard-theme md-content md-card {\n    background-color: transparent !important;\n    color: #ffffff !important;\n  }\n\n  /*Left menu*/\n  /*Sidebar*/\n  body.nr-dashboard-theme md-sidenav {\n    color: white !important;\n    background-color: rgba(0, 0, 0, 0) !important;\n  }\n\n  /* Añadir espacio entre los botones */\n  /* md-list-item {\n            margin-bottom: 10px !important;\n            margin-top: 10px !important;\n        }*/\n\n  md-list-item._md-button-wrap {\n    margin: 10px;\n  }\n\n  nr-menu-item-active {\n    border-right: 4px solid #ffe600;\n  }\n\n  /*Hover selection*/\n  a.md-no-style,\n  button.md-no-style {\n    border-radius: 10px !important;\n  }\n\n  .md-button.md-default-theme:not([disabled]).md-focused,\n  .md-button:not([disabled]).md-focused,\n  .md-button.md-default-theme:not([disabled]):hover,\n  .md-button:not([disabled]):hover {\n    background-color: none !important;\n  }\n\n  /*Selected*/\n  .nr-menu-item-active div button {\n    /* border-right: 4px solid rgb(255, 255, 255) !important;\n            border-left: 4px solid rgb(255, 255, 255) !important; */\n    /* background-color: #ff730000; */\n    border: none !important;\n  }\n\n  md-list-item.md-no-proxy.md-button,\n  md-list-item .md-no-style.md-button {\n    margin: 0px 5px !important;\n    width: 95% !important;\n  }\n\n  /*List*/\n  body.nr-dashboard-theme md-sidenav div.md-list-item-inner {\n    color: white !important;\n    background-color: rgb(165, 75, 40) !important;\n    border-radius: 10px !important;\n  }\n\n  /*Groups*/\n  ui-card-panel {\n    background-color: rgba(255, 255, 255, 0.089) !important;\n    border-radius: 10px !important;\n  }\n\n  .nr-dashboard-theme ui-card-panel {\n    border: none !important;\n  }\n\n  /*Name groups*/\n  .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n    color: rgba(255, 255, 255, 0.5) !important;\n  }\n\n  /*Bouttons*/\n  .nr-dashboard-theme .nr-dashboard-button .md-button {\n    background-color: rgba(255, 255, 255, 0.1) !important;\n  }\n\n  .md-button {\n    border-radius: 10px !important;\n  }\n\n  /*Dropdown menu*/\n\n  /* Color de fondo en el efecto de abrir */\n  .nr-dashboard-theme md-select-menu {\n    background-color: rgb(39, 39, 39) !important;\n    /* background-color: transparent !important; */\n  }\n\n  .nr-dashboard-theme .md-select-menu-container {\n    border-radius: 10px !important;\n    border: none !important;\n  }\n\n  /* Color de la opcion seleccionada en el menú desplegable */\n  .nr-dashboard-theme md-select-menu md-option[selected] {\n    color: white !important;\n    background-color: #ff7b00 !important;\n  }\n\n  /* Color con hover sobre las opciones del menú desplegable */\n  .nr-dashboard-theme md-select-menu md-option:hover {\n    background-color: #555555 !important;\n  }\n\n  /*Template*/\n  md-card>img,\n  md-card>md-card-header img,\n  md-card md-card-title-media img {\n    border-radius: 10px !important;\n  }\n\n  /* Color picker text BG */\n  .nr-dashboard-theme .color-picker-input-wrapper>input {\n    color: white !important;\n    background-color: transparent !important;\n  }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 220,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "f4c38b6556a8367c",
        "type": "mqtt in",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "",
        "topic": "admin123/cilindros/punto1/consumo",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "70113bd572087aab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 780,
        "wires": [
            [
                "fe9ff1d4dc59e5bd"
            ]
        ]
    },
    {
        "id": "7ab6a756468eec78",
        "type": "change",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "Set topic presion",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "presion",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 700,
        "wires": [
            [
                "afb71e2ddc111536",
                "afbf9c4d79d0185c"
            ]
        ]
    },
    {
        "id": "fe9ff1d4dc59e5bd",
        "type": "change",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "Set topic consumo",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "consumo",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 150,
        "y": 860,
        "wires": [
            [
                "77586fe3e35bfc10",
                "689c5ff4468693e8"
            ]
        ]
    },
    {
        "id": "ab3cc78b737a790a",
        "type": "ui_gauge",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "NIVELES ",
        "group": "d6a565f559b0906a",
        "order": 4,
        "width": 4,
        "height": 3,
        "gtype": "wave",
        "title": "Nivel",
        "label": "%",
        "format": "{{payload * 10}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 840,
        "y": 600,
        "wires": []
    },
    {
        "id": "d81be35f7d46219d",
        "type": "ui_gauge",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "PRESION",
        "group": "d6a565f559b0906a",
        "order": 5,
        "width": 5,
        "height": 3,
        "gtype": "gage",
        "title": "Presion",
        "label": "PSI",
        "format": "{{payload | number:2 }}",
        "min": 0,
        "max": "150",
        "colors": [
            "#ff0000",
            "#ff9838",
            "#fff700"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 920,
        "y": 700,
        "wires": []
    },
    {
        "id": "afb71e2ddc111536",
        "type": "range",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "minin": "0",
        "maxin": "15",
        "minout": "0",
        "maxout": "10",
        "action": "scale",
        "round": false,
        "property": "payload",
        "name": "",
        "x": 670,
        "y": 660,
        "wires": [
            [
                "ab3cc78b737a790a",
                "a769c677763b97df"
            ]
        ]
    },
    {
        "id": "b98b3653f9dbb8f8",
        "type": "ui_text",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "group": "d6a565f559b0906a",
        "order": 1,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "",
        "format": "{{msg.payload.nombre}}",
        "layout": "row-left",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#000000",
        "x": 630,
        "y": 620,
        "wires": []
    },
    {
        "id": "afbf9c4d79d0185c",
        "type": "range",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "minin": "0",
        "maxin": "15",
        "minout": "0",
        "maxout": "150",
        "action": "scale",
        "round": false,
        "property": "payload",
        "name": "",
        "x": 680,
        "y": 720,
        "wires": [
            [
                "d81be35f7d46219d",
                "902b1c8a928ffe6a",
                "662d9e463741798e",
                "de890ab489854ac3",
                "77586fe3e35bfc10"
            ]
        ]
    },
    {
        "id": "689c5ff4468693e8",
        "type": "ui_chart",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "",
        "group": "1b2646b7e26b1af9",
        "order": 1,
        "width": 20,
        "height": 4,
        "label": "Historial de consumo",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "1",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff9500",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 440,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "902b1c8a928ffe6a",
        "type": "switch",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "btwn",
                "v": "200",
                "vt": "num",
                "v2": "100",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "60",
                "vt": "num",
                "v2": "99",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "0",
                "vt": "num",
                "v2": "59",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 930,
        "y": 760,
        "wires": [
            [
                "2abda30277bd5535"
            ],
            [
                "1b5d8b8a0c3b7e77"
            ],
            [
                "bed00d5bd4b1128d"
            ],
            [
                "c022c5cd2337e7fa"
            ]
        ]
    },
    {
        "id": "02899c84331de550",
        "type": "ui_text",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "group": "d6a565f559b0906a",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Estado:",
        "format": "{{msg.payload}}",
        "layout": "row-right",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1520,
        "y": 760,
        "wires": []
    },
    {
        "id": "2abda30277bd5535",
        "type": "change",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "Estado ALTO",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "⚠️ Alto",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 700,
        "wires": [
            [
                "02899c84331de550"
            ]
        ]
    },
    {
        "id": "1b5d8b8a0c3b7e77",
        "type": "change",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "Estado OK",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "🟢 OK",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 740,
        "wires": [
            [
                "02899c84331de550"
            ]
        ]
    },
    {
        "id": "bed00d5bd4b1128d",
        "type": "change",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "Estado bajo",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "🟡 Bajo\t",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 780,
        "wires": [
            [
                "02899c84331de550"
            ]
        ]
    },
    {
        "id": "c022c5cd2337e7fa",
        "type": "change",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "Estado critico",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "🔴 Crítico\t",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 820,
        "wires": [
            [
                "02899c84331de550"
            ]
        ]
    },
    {
        "id": "57cc4b3fec6bccff",
        "type": "mqtt out",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "",
        "topic": "admin123/cilindros/punto1/valvula",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "70113bd572087aab",
        "x": 1420,
        "y": 520,
        "wires": []
    },
    {
        "id": "98258f222ce807e5",
        "type": "ui_template",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "group": "ad726ee97b3c56ec",
        "name": "Switch valvula",
        "order": 1,
        "width": 3,
        "height": 4,
        "format": "<script src=\"https://cdn.jsdelivr.net/npm/sweetalert2@11\"></script>\n<style>\n.valve-container {\ntext-align: center;\ncursor: pointer;\npadding: 20px\n}\n\n.valve-image {\n  display: block; /* Añadido para centrar */\n  margin: 0 auto; /* Añadido para centrar */\n  width: 50px;\n  height: 120px;\n}\n\n.valve-text {\nfont-size: 16px;\nfont-weight: bold;\nmargin-top: 8px;\n}\n\n.valve-open {\ncolor: #ffc900;\n}\n\n.valve-closed {\ncolor: #ff1f00;\n}\n\n</style>\n\n<!-- Válvula control -->\n<div class=\"valve-container\" ng-click=\"confirmChange()\">\n  <!-- <img src=\"/valvula_abierta.png\" alt=\"Válvula abierta\" width=\"50\" height=\"50\" /> -->\n  <img\nng-src=\"{{switchState ? '/valvula_abierta.png' : '/valvula_cerrada.png'}}\"    alt=\"Válvula\"\n    class=\"valve-image\"\n  />\n  <p class=\"valve-text\" ng-class=\"{'valve-open': switchState, 'valve-closed': !switchState}\">\n    {{switchState ? 'Válvula Abierta' : 'Válvula Cerrada'}}\n  </p>\n</div>\n\n<script>\n  (function (scope) {\n    // Estado inicial del switch (válvula cerrada)\n    scope.switchState = true;\n\n    // Función para manejar el clic y confirmar el cambio de estado\n    scope.confirmChange = function () {\n      const previousState = scope.switchState; // Guarda el estado actual\n      const newState = !previousState; // Cambia el estado al opuesto\n\n      // Muestra la confirmación al usuario\n      Swal.fire({\n        title: '¿Estás seguro?',\n        text: 'Confirma para realizar acción',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Sí',\n        cancelButtonText: 'No',\n        confirmButtonColor: '#ff7b00',\n        cancelButtonColor: '#d33',\n      }).then((result) => {\n        if (result.isConfirmed) {\n          scope.switchState = newState; // Actualiza el estado si confirma\n          scope.send({ payload: scope.switchState }); // Envía el nuevo estado\n          scope.send({ topic: \"valvula\", payload: scope.switchState }); // nuevo: para guardar en el flow\n        } else {\n          scope.switchState = previousState; // Mantiene el estado anterior si cancela\n        }\n        scope.$apply(); // Actualiza el DOM\n      });\n    };\n\n    // Maneja mensajes externos para actualizar el estado del switch\n    scope.$watch(\"msg\", function (msg) {\n      if (msg && msg.payload !== undefined) {\n        scope.switchState = msg.payload; // Sincroniza con el estado recibido\n        scope.$apply(); // Actualiza el DOM\n      }\n    });\n  })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1140,
        "y": 460,
        "wires": [
            [
                "57cc4b3fec6bccff",
                "bccc0eb40a4e684b"
            ]
        ],
        "icon": "node-red-dashboard/ui_switch.png"
    },
    {
        "id": "68238b8109beea8f",
        "type": "function",
        "z": "ed84d3e070727412",
        "name": "Actualizar alertas",
        "func": "// Obtener o inicializar el estado global\nconst alerts = global.get('alerts') || {};\nconst cylinder = flow.get(\"datosCiudad1\");\nconst pressure = msg.payload;\n\n// Definir rangos\nconst ranges = {\n    normal: { min: 100, max: 200 },\n    warning: { min: 60, max: 90 },\n    alarm: { min: 0, max: 59 }\n};\n\n// Determinar estado\nlet status, message, color;\nif (pressure >= ranges.normal.min && pressure <= ranges.normal.max) {\n    status = 'normal';\n} else if (pressure >= ranges.warning.min && pressure <= ranges.warning.max) {\n    status = 'warning';\n    message = `Advertencia: Presión baja ${pressure} PSI`;\n    color = '#59544c';\n} else if (pressure >= ranges.alarm.min && pressure <= ranges.alarm.max) {\n    status = 'alarm';\n    message = `¡Alarma! Presión crítica ${pressure} PSI`;\n    color = '#a32929';\n}\n\n// Validar y actualizar estado de alertas\nif (status === 'normal') {\n    delete alerts[cylinder.nombre]; // Eliminar alerta si está en estado normal\n} else {\n    // Asegurarse de que el cilindro y los valores sean válidos\n    if (cylinder.nombre && cylinder.nombre !== 'undefined' && message && color) {\n        alerts[cylinder.nombre] = { message, color }; // Agregar o actualizar alerta\n    }\n}\n\n// Guardar en el contexto global\nglobal.set('alerts', alerts);\n\n// Generar arreglo limpio de alertas\nmsg.alerts = Object.entries(alerts)\n    .filter(([key, value]) => key && key !== 'undefined' && value.message && value.color) // Filtrar alertas válidas\n    .map(([key, value]) => ({ cylinder: key, ...value })); // Formatear las alertas\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1750,
        "y": 400,
        "wires": [
            [
                "39d3d59025217cd5"
            ]
        ]
    },
    {
        "id": "3687ee3b09b52dd2",
        "type": "change",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "nombre",
                "pt": "msg",
                "to": "nombre",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 860,
        "wires": [
            [
                "aef2b33a57ae564e"
            ]
        ]
    },
    {
        "id": "662d9e463741798e",
        "type": "switch",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "Valida si no es nulo",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 910,
        "y": 860,
        "wires": [
            [
                "3687ee3b09b52dd2"
            ]
        ]
    },
    {
        "id": "39d3d59025217cd5",
        "type": "ui_template",
        "z": "ed84d3e070727412",
        "group": "c8562f8666449872",
        "name": "Renderizar alertas",
        "order": 1,
        "width": 20,
        "height": 3,
        "format": "<div style=\"border-left: 1px solid orange; border-radius: 5px; overflow: hidden; margin-bottom: 5px;\"\n  ng-repeat=\"alert in msg.alerts\">\n  <div style=\"background-color: {{alert.color}}; padding: 10px;\">\n    <h3>{{alert.cylinder}}</h3>\n    <p>{{alert.message}}</p>\n  </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1950,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "aef2b33a57ae564e",
        "type": "link out",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "06b07078a652f65d"
        ],
        "x": 1265,
        "y": 860,
        "wires": []
    },
    {
        "id": "06b07078a652f65d",
        "type": "link in",
        "z": "ed84d3e070727412",
        "name": "link in 1",
        "links": [
            "aef2b33a57ae564e"
        ],
        "x": 1605,
        "y": 400,
        "wires": [
            [
                "68238b8109beea8f"
            ]
        ]
    },
    {
        "id": "6c2321c85b7fee9e",
        "type": "switch",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "Validar fuga > 0",
        "property": "fuga",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1200,
        "y": 660,
        "wires": [
            [
                "dc355fd6c0f2bfb9"
            ]
        ]
    },
    {
        "id": "dc355fd6c0f2bfb9",
        "type": "change",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "Fuga == True",
        "rules": [
            {
                "t": "set",
                "p": "fuga",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 660,
        "wires": [
            [
                "eb1d5441a5493e8d"
            ]
        ]
    },
    {
        "id": "ab6442dca4a352a0",
        "type": "change",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "Mover playload a msg.fuga",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "fuga",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 660,
        "wires": [
            [
                "6c2321c85b7fee9e"
            ]
        ]
    },
    {
        "id": "91b9c2381652a748",
        "type": "mqtt in",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "",
        "topic": "admin123/cilindros/punto1/presion",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "70113bd572087aab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 700,
        "wires": [
            [
                "7ab6a756468eec78"
            ]
        ]
    },
    {
        "id": "6d1c51736053af55",
        "type": "mqtt in",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "",
        "topic": "admin123/cilindros/punto1",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "70113bd572087aab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 620,
        "wires": [
            [
                "94a20f8c52bf66e3"
            ]
        ]
    },
    {
        "id": "fbefe42c368dc1b5",
        "type": "mqtt in",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "",
        "topic": "admin123/punto1/sensores/fuga",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "70113bd572087aab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 540,
        "wires": [
            [
                "ad12f1451bc31dda"
            ]
        ]
    },
    {
        "id": "4867fd6968c7b4e5",
        "type": "ui_template",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "group": "d6a565f559b0906a",
        "name": "Notificacion fuga gas sensor ambiente",
        "order": 7,
        "width": 6,
        "height": 1,
        "format": "<script src=\"https://cdn.jsdelivr.net/npm/sweetalert2@11\"></script>\n<style>\n  body .swal2-popup {\n    font-family: Arial, sans-serif;\n    background: #262626;\n    color: #ffffff;\n    width: auto;\n    border-radius: 8px;\n    padding: 10px;\n  }\n\n  div:where(.swal2-icon).swal2-error {\n    border-color: #ffffff;\n    color: #ffffff;\n  }\n\n  .alert-container {\n    text-align: center;\n    font-size: 16px;\n    color: #ffffff;\n  }\n</style>\n\n<!-- Componente de alerta -->\n<div class=\"alert-container\" id=\"alert-container\"></div>\n\n<script>\n  (function (scope) {\n    let lastPayload = null; // Variable para almacenar el último valor recibido\n    let alertActive = false; // Estado de la alerta activa\n\n    scope.$watch(\"msg\", function (msg) {\n      if (msg && msg.payload.estado !== lastPayload) {\n        lastPayload = msg.payload.estado; // Actualiza el último valor recibido\n\n        if (msg.payload.estado === true && !alertActive) {\n          alertActive = true;\n          Swal.fire({\n            title: \"¡Fuga de Gas Detectada!\",\n            text: \"Se ha detectado una fuga de gas en: \"+  msg.ciudad.nombre +  \". Tome precauciones inmediatas. +\\n + Por su seguridad se activara la ventilacion al maximo y se cerrara la valvula de suministro\",\n            icon: \"error\",\n            confirmButtonText: \"Entendido\",\n            confirmButtonColor: \"#ff0000\",\n          }).then(() => {\n            scope.send({ payload: true });\n            alertActive = false; // Reinicia el estado de alerta después de cerrar\n          });\n        }\n      }\n    });\n  })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 630,
        "y": 540,
        "wires": [
            [
                "c96b90951e2d8e7b",
                "b1a718579ce91be6"
            ]
        ]
    },
    {
        "id": "3c6173d7d1582dad",
        "type": "change",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 540,
        "wires": [
            [
                "98258f222ce807e5"
            ]
        ]
    },
    {
        "id": "c96b90951e2d8e7b",
        "type": "switch",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 910,
        "y": 540,
        "wires": [
            [
                "3c6173d7d1582dad"
            ]
        ]
    },
    {
        "id": "1cace0f5ab7337a9",
        "type": "ui_template",
        "z": "ed84d3e070727412",
        "g": "1c0628dc9c34f4f0",
        "group": "ad726ee97b3c56ec",
        "name": "Ventilador",
        "order": 2,
        "width": 3,
        "height": 4,
        "format": "<style>\n  .rotating-image {\n    margin-top: 40px;\n    width: 100px;\n    height: 100px;\n    transition: transform 0.05s linear;\n  }\n</style>\n\n<div>\n  <img\n    id=\"rotatingImage\"\n    src=\"/ventilador.png\"\n    alt=\"Rotating Fan\"\n    class=\"rotating-image\"\n  />\n</div>\n\n<script>\n  (function(scope) {\n    let angle = 0;\n    let interval = null;\n    let lastSpeed = -1; // -1 para forzar la primera ejecución\n\n    function applyRotation() {\n      const imageElement = document.getElementById(\"rotatingImage\");\n      imageElement.style.transform = `rotate(${angle}deg)`;\n    }\n\n    function updateRotation(speed) {\n      if (speed === 0) {\n        if (interval) {\n          clearInterval(interval);\n          interval = null;\n        }\n        return;\n      }\n\n      if (speed === lastSpeed) return;\n\n      if (interval) clearInterval(interval);\n\n      interval = setInterval(() => {\n        angle = (angle + 10) % 360;\n        applyRotation(); // Aplica el ángulo actual\n      }, speed);\n\n      lastSpeed = speed;\n    }\n\n    scope.$watch(\"msg\", function(msg) {\n      if (msg && msg.payload !== undefined) {\n        const payloadValue = parseInt(msg.payload, 10);\n        let speed;\n\n        if (payloadValue >= 1 && payloadValue <= 10) {\n          speed = 200;\n        } else if (payloadValue >= 11 && payloadValue <= 75) {\n          speed = 100;\n        } else if (payloadValue >= 76 && payloadValue <= 100) {\n          speed = 10;\n        } else {\n          speed = 0;\n        }\n\n        updateRotation(speed);\n      }\n    });\n\n    scope.$on(\"$destroy\", function() {\n      if (interval) clearInterval(interval);\n    });\n  })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 860,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "0ad30251fa78784a",
        "type": "ui_template",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "group": "d6a565f559b0906a",
        "name": "IMAGEN TANQUE GAS",
        "order": 3,
        "width": 5,
        "height": 3,
        "format": "<img src=\"https://tatsa.mx/wp-content/uploads/2023/01/tanques-de-carburacio204129n-02.webp\"\n     style=\"display: block; margin: auto;\">\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 590,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "b1a718579ce91be6",
        "type": "link out",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "891da69baaef99e8"
        ],
        "x": 705,
        "y": 600,
        "wires": []
    },
    {
        "id": "891da69baaef99e8",
        "type": "link in",
        "z": "ed84d3e070727412",
        "g": "1c0628dc9c34f4f0",
        "name": "link in 2",
        "links": [
            "b1a718579ce91be6"
        ],
        "x": 85,
        "y": 1060,
        "wires": [
            [
                "cc123f932a686064",
                "8c5670e652ef5ce7"
            ]
        ]
    },
    {
        "id": "eb1d5441a5493e8d",
        "type": "function",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "Valvula = False && fuga = True",
        "func": "let estadoValvula = flow.get(\"estado_valvula\"); // true o false\nlet hayFuga = msg.fuga === true;\nlet alerta = false;\n\nif (estadoValvula === false && hayFuga) {\n    alerta = true;\n}\n\nmsg.alerta = alerta;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 660,
        "wires": [
            [
                "306d32d1ec8d7c16"
            ]
        ]
    },
    {
        "id": "bccc0eb40a4e684b",
        "type": "function",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "Guardar estado valvula en el flujo",
        "func": "flow.set(\"estado_valvula\", msg.payload);\nreturn null; // no necesitamos enviar nada más\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "894d3164b6ac88be",
        "type": "inject",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "Disparador de valvula",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 860,
        "y": 460,
        "wires": [
            [
                "98258f222ce807e5"
            ]
        ]
    },
    {
        "id": "306d32d1ec8d7c16",
        "type": "switch",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "Valida alerta == true",
        "property": "alerta",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1900,
        "y": 660,
        "wires": [
            [
                "9439d99e468635cf"
            ]
        ]
    },
    {
        "id": "94a20f8c52bf66e3",
        "type": "change",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "datosCiudad1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 620,
        "wires": [
            [
                "b98b3653f9dbb8f8"
            ]
        ]
    },
    {
        "id": "9439d99e468635cf",
        "type": "function",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "function 2",
        "func": "msg.ciudad = flow.get(\"datosCiudad1\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 720,
        "wires": [
            [
                "47c5213329ee5147"
            ]
        ]
    },
    {
        "id": "ad12f1451bc31dda",
        "type": "function",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "function 1",
        "func": "// Obtener el objeto actual (o uno vacío si no existe aún)\nlet ciudad = flow.get(\"datosCiudad1\") || {};\n\n// Actualizar solo el campo \"concentracion\"\nciudad.concentracion = msg.payload.concentracion; // Ajusta según dónde tengas el valor\n\n// Guardar el objeto modificado nuevamente\nflow.set(\"datosCiudad1\", ciudad);\nlet prueba = flow.get(\"datosCiudad1\") || {};\nconsole.log(\"fuego\" , prueba);\n// (Opcional) Verificar\nmsg.ciudad = ciudad;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 540,
        "wires": [
            [
                "4867fd6968c7b4e5"
            ]
        ]
    },
    {
        "id": "b92cabac019bce89",
        "type": "inject",
        "z": "ed84d3e070727412",
        "g": "3366b3234dc8cf7b",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{ \t\"temp\" : 54, \t\"hum\" : 43 }",
        "payloadType": "json",
        "x": 110,
        "y": 360,
        "wires": [
            [
                "75452209a15ebcd7"
            ]
        ]
    },
    {
        "id": "75452209a15ebcd7",
        "type": "http request",
        "z": "ed84d3e070727412",
        "g": "3366b3234dc8cf7b",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.openweathermap.org/data/2.5/weather?q=Machala,EC&units=metric&lang=es&appid=c6fbddc45f00124a2e572f57a0d43d91",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 270,
        "y": 360,
        "wires": [
            [
                "65ac218cfe1c5490"
            ]
        ]
    },
    {
        "id": "65ac218cfe1c5490",
        "type": "json",
        "z": "ed84d3e070727412",
        "g": "3366b3234dc8cf7b",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 430,
        "y": 360,
        "wires": [
            [
                "ee729e06a0f51a57"
            ]
        ]
    },
    {
        "id": "ee729e06a0f51a57",
        "type": "function",
        "z": "ed84d3e070727412",
        "g": "3366b3234dc8cf7b",
        "name": "Obtener datos de la API",
        "func": "msg.payload = {\n  name: msg.payload.name,\n  weather: msg.payload.weather,\n  main: msg.payload.main\n};\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 360,
        "wires": [
            [
                "8c4c681ca32f3a98"
            ]
        ]
    },
    {
        "id": "8c4c681ca32f3a98",
        "type": "ui_template",
        "z": "ed84d3e070727412",
        "g": "3366b3234dc8cf7b",
        "group": "fb250c05fdf29f20",
        "name": "Clima",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div\n    style=\"display: flex; align-items: center; justify-content: space-around; padding: 10px; font-family: sans-serif; text-align: center;\">\n\n    <!-- Icono -->\n    <div>\n        <img ng-src=\"http://openweathermap.org/img/wn/{{msg.payload.weather[0].icon}}@2x.png\" alt=\"clima\" style=\"width: 60px; height: 60px;\">\n    </div>\n\n    <!-- Ciudad -->\n    <div>\n        <p style=\"margin: 0; font-weight: bold;\">Ciudad</p>\n        <p style=\"margin: 0;\">{{msg.payload.name}}</p>\n    </div>\n\n    <!-- Estado del clima -->\n    <div>\n        <p style=\"margin: 0; font-weight: bold;\">Estado</p>\n        <p style=\"margin: 0;\">{{msg.payload.weather[0].description | uppercase}}</p>\n    </div>\n\n    <!-- Temperatura -->\n    <div>\n        <p style=\"margin: 0; font-weight: bold;\">Temperatura</p>\n        <p style=\"margin: 0;\">{{msg.payload.main.temp}} °C</p>\n    </div>\n\n    <!-- Sensación térmica -->\n    <div>\n        <p style=\"margin: 0; font-weight: bold;\">Sensación</p>\n        <p style=\"margin: 0;\">{{msg.payload.main.feels_like}} °C</p>\n    </div>\n\n    <!-- Humedad -->\n    <div>\n        <p style=\"margin: 0; font-weight: bold;\">Humedad</p>\n        <p style=\"margin: 0;\">{{msg.payload.main.humidity}} %</p>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 810,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "d7b57c5759641909",
        "type": "ui_template",
        "z": "ed84d3e070727412",
        "g": "4387bad875a25044",
        "group": "2cc601547f7522ff",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n    .clock-widget{\n        text-align: center;\n        font-family: 'Segoe UI', sans-serif;\n        color: #fff;\n    }\n    .clock-widget .fecha {\n        font-size: 14px;\n        color: #ccc;\n        margin-bottom: 8px;\n    }\n\n    .clock-widget .hora {\n        font-size: 32px;\n        font-weight: bold;\n        color: #ffa500;\n    }\n</style>\n\n<div class=\"clock-widget\">\n    <div class=\"fecha\">{{msg.payload.fecha}}</div>\n    <div class=\"hora\">{{msg.payload.hora}}</div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 660,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "a5162c4aa79f7f5a",
        "type": "join",
        "z": "ed84d3e070727412",
        "g": "4387bad875a25044",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 530,
        "y": 240,
        "wires": [
            [
                "d7b57c5759641909"
            ]
        ]
    },
    {
        "id": "20bf5a741d78c032",
        "type": "ui_template",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "group": "d6a565f559b0906a",
        "name": "Descripcion general",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "<style>\n    .contenedor-horizontal {\n        display: flex;\n        align-items: center;\n        justify-content: space-around;\n        padding: 10px;\n        font-family: Arial, sans-serif;\n        text-align: center;\n        /* background-color: #f0f0f0; */\n        border-radius: 8px;\n        margin: 10px 20px;\n    }\n\n    .contenedor-horizontal div {\n        margin: 0 10px;\n    }\n\n    .etiqueta {\n        font-weight: bold;\n    }\n\n    .contenedor-horizontal p {\n        margin: 0;\n    }\n\n    .contenedor-horizontal p:first-child {\n        font-weight: bold;\n    }\n</style>\n\n<div class=\"contenedor-horizontal\">\n    <div>\n        <p>Nivel</p>\n        <p>{{msg.payload.nivel * 10 | number:2}}%</p>\n    </div>\n    <div>\n        <p>Presión</p>\n        <p>{{msg.payload.presion | number:2}} PSI</p>\n    </div>\n    <div>\n        <p>Concentración</p>\n        <p>{{msg.payload.concentracion}} ppm</p>\n    </div>\n    <div>\n        <p>Dirección</p>\n        <p>{{msg.payload.direccion}}</p>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1440,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "de890ab489854ac3",
        "type": "join",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1070,
        "y": 940,
        "wires": [
            [
                "1330e11901f761fb"
            ]
        ]
    },
    {
        "id": "a769c677763b97df",
        "type": "change",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "Set topic nivel",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "nivel",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 940,
        "wires": [
            [
                "de890ab489854ac3"
            ]
        ]
    },
    {
        "id": "1330e11901f761fb",
        "type": "function",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "Guardar datos",
        "func": "let datos = flow.get('datosCiudad1') || {};\n\nmsg.payload = {\n    nombre: datos.nombre,\n    concentracion: datos.concentracion,\n    direccion: datos.direccion,\n    presion: msg.payload.presion,\n    nivel: msg.payload.nivel\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 940,
        "wires": [
            [
                "20bf5a741d78c032"
            ]
        ]
    },
    {
        "id": "6a85c26a0847dc5e",
        "type": "switch",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "Validar consumo > 0",
        "property": "payload.consumo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 620,
        "y": 820,
        "wires": [
            [
                "abb5e44725e92a48"
            ]
        ]
    },
    {
        "id": "77586fe3e35bfc10",
        "type": "join",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "Unir presion y consumo en payload",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 490,
        "y": 860,
        "wires": [
            [
                "6a85c26a0847dc5e"
            ]
        ]
    },
    {
        "id": "abb5e44725e92a48",
        "type": "link out",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "Link enviar consumo",
        "mode": "link",
        "links": [
            "73c323a0992f611b"
        ],
        "x": 765,
        "y": 860,
        "wires": []
    },
    {
        "id": "73c323a0992f611b",
        "type": "link in",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "name": "Link recibir consumo",
        "links": [
            "abb5e44725e92a48"
        ],
        "x": 815,
        "y": 660,
        "wires": [
            [
                "ab6442dca4a352a0"
            ]
        ]
    },
    {
        "id": "47c5213329ee5147",
        "type": "ui_template",
        "z": "ed84d3e070727412",
        "g": "eca886a5d7cbed9d",
        "group": "d6a565f559b0906a",
        "name": "Alerta fuga gas tanque cerrado",
        "order": 8,
        "width": 6,
        "height": 1,
        "format": "<script src=\"https://cdn.jsdelivr.net/npm/sweetalert2@11\"></script>\n\n<style>\n  body .swal2-popup {\n    font-family: Arial, sans-serif;\n    background: #262626;\n    color: #ffffff;\n    width: auto;\n    border-radius: 8px;\n    padding: 10px;\n  }\n\n  div:where(.swal2-icon).swal2-error {\n    border-color: #ffffff;\n    color: #ffffff;\n  }\n\n  .alert-container {\n    text-align: center;\n    font-size: 16px;\n    color: #ffffff;\n  }\n</style>\n\n<div class=\"alert-container\" id=\"alert-container\"></div>\n\n<script>\n  (function(scope) {\n    scope.$watch('msg', function(msg) {\n      if (msg && msg.alerta === true && msg.ciudad) {\n        Swal.fire({\n          title: \"¡Fuga de Gas Detectada!\",\n          text: \"Se ha detectado una fuga de gas en: \" + msg.ciudad.nombre +\n            \". Tome precauciones inmediatas.\\nPor su seguridad se activará la ventilación al máximo y se cerrará la válvula de suministro.\",\n          icon: \"error\",\n          confirmButtonText: \"Entendido\",\n          confirmButtonColor: \"#ff0000\"\n        }).then(() => {\n          // Enviar un nuevo mensaje al flujo con alerta = false\n          scope.send({ alerta: false });\n        });\n      }\n    });\n  })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1890,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "7df77b2c4d632e1f",
        "type": "ui_template",
        "z": "ed84d3e070727412",
        "g": "1c0628dc9c34f4f0",
        "group": "ad726ee97b3c56ec",
        "name": "Slider ventilador",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<style>\n    .wrapper {\n        margin: 20px;\n        position: relative;\n        width: 87%;\n        height: 1.5rem;\n    }\n\n    .wrapper::before,\n    .wrapper::after {\n        content: '';\n        display: block;\n        position: absolute;\n        z-index: 99;\n        color: #fff;\n        height: 100%;\n        text-align: center;\n        font-size: 1.5rem;\n        line-height: 1;\n        padding: 0 0.75rem;\n        pointer-events: none;\n    }\n\n    .wrapper::before {\n        left: 0;\n        top: 0;\n    }\n\n    .wrapper::after {\n        right: 0;\n        top: 0;\n    }\n\n    input[type=\"range\"] {\n        position:absolute;\n        -webkit-appearance: none;\n        appearance: none;\n        background-color: rgba(255, 255, 255, 0.2);\n        top: 50%;\n        left: 50%;\n        margin: 0;\n        width: 15rem;\n        height: 3.5rem;\n        transform: translate(-50%, -50%);\n        border-radius: 1rem;\n        overflow: hidden;\n        cursor: col-resize;\n    }\n\n    input[type=\"range\"]::-webkit-slider-runnable-track {\n        background-color: rgba(255, 255, 255, 0.2);\n    }\n\n    input[type=\"range\"]::-webkit-slider-thumb {\n        -webkit-appearance: none;\n        appearance: none;\n        width: 0;\n        height: 0;\n        box-shadow: -20rem 0 0 20rem rgba(255, 255, 255, 0.2);\n    }\n\n    input[type=\"range\"]::-moz-range-thumb {\n        border: none;\n        width: 0;\n        height: 0;\n        box-shadow: -20rem 0 0 20rem rgba(255, 255, 255, 0.2);\n    }\n</style>\n\n<div class=\"wrapper\">\n    <input type=\"range\" min=\"0\" max=\"100\" step=\"1\" value=\"50\" ng-model=\"sliderValue\" />\n</div>\n\n<script>\n    (function(scope) {\n    // Actualiza el slider cuando cambia\n    scope.$watch('sliderValue', function(newValue) {\n    if (newValue !== undefined) {\n    scope.send({ payload: newValue });\n    }\n    });\n    \n    // Escucha nuevos valores desde el exterior (por ejemplo, Node-RED o backend)\n    scope.on('payload', function(msg) {\n    if (msg && typeof msg.payload === 'number') {\n    scope.sliderValue = msg.payload;\n    }\n    });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 680,
        "y": 1060,
        "wires": [
            [
                "1cace0f5ab7337a9"
            ]
        ]
    },
    {
        "id": "1d1bd6d13873be6a",
        "type": "change",
        "z": "ed84d3e070727412",
        "g": "1c0628dc9c34f4f0",
        "name": "velocidad ventilador = 100",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "100",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1100,
        "wires": [
            [
                "7df77b2c4d632e1f",
                "1cace0f5ab7337a9"
            ]
        ]
    },
    {
        "id": "cc123f932a686064",
        "type": "debug",
        "z": "ed84d3e070727412",
        "g": "1c0628dc9c34f4f0",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 260,
        "y": 1040,
        "wires": []
    },
    {
        "id": "8c5670e652ef5ce7",
        "type": "switch",
        "z": "ed84d3e070727412",
        "g": "1c0628dc9c34f4f0",
        "name": "Si estado es True",
        "property": "payload.estado",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 210,
        "y": 1100,
        "wires": [
            [
                "1d1bd6d13873be6a"
            ]
        ]
    },
    {
        "id": "a650bf9d83e4ec4a",
        "type": "mqtt out",
        "z": "74273795d1e74a6e",
        "g": "969d8996b0110f16",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "70113bd572087aab",
        "x": 2050,
        "y": 80,
        "wires": []
    },
    {
        "id": "6ab5784e6c744d2d",
        "type": "change",
        "z": "74273795d1e74a6e",
        "g": "969d8996b0110f16",
        "name": "Set datos a payload y su topic",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"id\":1,\"nombre\":\"MACHALA SUCURSAL NORTE\",\"concentracion\":100,\"direccion\":\"Calle primera y segunda\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "admin123/cilindros/punto1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 80,
        "wires": [
            [
                "a650bf9d83e4ec4a"
            ]
        ]
    },
    {
        "id": "0ac0b9d3f7b20ef1",
        "type": "inject",
        "z": "74273795d1e74a6e",
        "g": "969d8996b0110f16",
        "name": "Disparador datos",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "6ab5784e6c744d2d"
            ]
        ]
    },
    {
        "id": "59480978506aa25e",
        "type": "inject",
        "z": "74273795d1e74a6e",
        "g": "969d8996b0110f16",
        "name": "Generar Presión",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "presion",
        "payload": "{\"estado\":false}",
        "payloadType": "json",
        "x": 190,
        "y": 140,
        "wires": [
            [
                "c446106c6309cc8d"
            ]
        ]
    },
    {
        "id": "c446106c6309cc8d",
        "type": "random",
        "z": "74273795d1e74a6e",
        "g": "969d8996b0110f16",
        "name": "Presión",
        "low": "15",
        "high": "15",
        "inte": "true",
        "property": "presion",
        "x": 380,
        "y": 140,
        "wires": [
            [
                "55111d96b4599d19",
                "c067b2ee2268df33"
            ]
        ]
    },
    {
        "id": "037577b4694f7516",
        "type": "random",
        "z": "74273795d1e74a6e",
        "g": "969d8996b0110f16",
        "name": "Consumir gas",
        "low": "1",
        "high": "1",
        "inte": "false",
        "property": "consumo",
        "x": 840,
        "y": 280,
        "wires": [
            [
                "d75804f66ab62f96",
                "10b897910f81482b"
            ]
        ]
    },
    {
        "id": "1076149b27138956",
        "type": "function",
        "z": "74273795d1e74a6e",
        "g": "969d8996b0110f16",
        "name": "Calcular presion resultante",
        "func": "let presion = flow.get(\"ppasaje\") ; \nlet consumo = msg.consumo;\n\n\nif (presion>0){\n    flow.set(\"ppasaje\", (presion - consumo));\n}\n\nmsg.presionr = flow.get(\"ppasaje\"); \nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 160,
        "wires": [
            [
                "d75804f66ab62f96"
            ]
        ]
    },
    {
        "id": "0f379a02def92561",
        "type": "inject",
        "z": "74273795d1e74a6e",
        "g": "969d8996b0110f16",
        "name": "Disparador de consumo",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "6",
        "crontab": "",
        "once": false,
        "onceDelay": "4",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 210,
        "y": 380,
        "wires": [
            [
                "31b8113f5e28d529"
            ]
        ]
    },
    {
        "id": "461a6de532021279",
        "type": "change",
        "z": "74273795d1e74a6e",
        "g": "969d8996b0110f16",
        "name": "Set presion topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "admin123/cilindros/punto1/presion",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 140,
        "wires": [
            [
                "a650bf9d83e4ec4a"
            ]
        ]
    },
    {
        "id": "ecd44b739172d337",
        "type": "change",
        "z": "74273795d1e74a6e",
        "g": "969d8996b0110f16",
        "name": "Set consumo a topic consumo",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "admin123/cilindros/punto1/consumo",
                "tot": "str"
            },
            {
                "t": "move",
                "p": "consumo",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "presionr",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1830,
        "y": 220,
        "wires": [
            [
                "a650bf9d83e4ec4a"
            ]
        ]
    },
    {
        "id": "3a4720e3968a645f",
        "type": "change",
        "z": "74273795d1e74a6e",
        "g": "969d8996b0110f16",
        "name": "Set presion a topic presion",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "admin123/cilindros/punto1/presion",
                "tot": "str"
            },
            {
                "t": "move",
                "p": "presionr",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "consumo",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1860,
        "y": 280,
        "wires": [
            [
                "a650bf9d83e4ec4a"
            ]
        ]
    },
    {
        "id": "d75804f66ab62f96",
        "type": "switch",
        "z": "74273795d1e74a6e",
        "g": "969d8996b0110f16",
        "name": "Validar presionr > 0",
        "property": "presionr",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1590,
        "y": 280,
        "wires": [
            [
                "ecd44b739172d337",
                "3a4720e3968a645f"
            ]
        ]
    },
    {
        "id": "55111d96b4599d19",
        "type": "change",
        "z": "74273795d1e74a6e",
        "g": "969d8996b0110f16",
        "name": "Set ppasaje a payload",
        "rules": [
            {
                "t": "set",
                "p": "ppasaje",
                "pt": "flow",
                "to": "presion",
                "tot": "msg"
            }
        ],
        "x": 500,
        "y": 220,
        "wires": [
            [
                "037577b4694f7516"
            ]
        ]
    },
    {
        "id": "c067b2ee2268df33",
        "type": "switch",
        "z": "74273795d1e74a6e",
        "g": "969d8996b0110f16",
        "name": "Validar presion > 0",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 590,
        "y": 140,
        "wires": [
            [
                "461a6de532021279"
            ]
        ]
    },
    {
        "id": "48c9d21b26acf77a",
        "type": "mqtt in",
        "z": "74273795d1e74a6e",
        "g": "969d8996b0110f16",
        "name": "",
        "topic": "admin123/cilindros/punto1/valvula",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "70113bd572087aab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 220,
        "y": 320,
        "wires": [
            [
                "8565c56ba519a0be"
            ]
        ]
    },
    {
        "id": "8565c56ba519a0be",
        "type": "change",
        "z": "74273795d1e74a6e",
        "g": "969d8996b0110f16",
        "name": "Mover payload a valvula",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "valvula",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 320,
        "wires": [
            [
                "d756e4ac2a0679d1"
            ]
        ]
    },
    {
        "id": "31b8113f5e28d529",
        "type": "change",
        "z": "74273795d1e74a6e",
        "g": "969d8996b0110f16",
        "name": "Mover payload a consumo",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "consumo",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 380,
        "wires": [
            [
                "d756e4ac2a0679d1"
            ]
        ]
    },
    {
        "id": "d756e4ac2a0679d1",
        "type": "switch",
        "z": "74273795d1e74a6e",
        "g": "969d8996b0110f16",
        "name": "Si valvula == consumo (TRUE)",
        "property": "valvula",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "consumo",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 950,
        "y": 380,
        "wires": [
            [
                "14c265f16e9267eb"
            ]
        ]
    },
    {
        "id": "14c265f16e9267eb",
        "type": "change",
        "z": "74273795d1e74a6e",
        "g": "969d8996b0110f16",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "consumo",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 380,
        "wires": [
            [
                "037577b4694f7516"
            ]
        ]
    },
    {
        "id": "b477bb105718138e",
        "type": "inject",
        "z": "74273795d1e74a6e",
        "g": "1db8133a62cab60c",
        "name": "SIMULAR FUGA DE GAS PUNTO 1",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "admin123/punto1/sensores/fuga",
        "payload": "{\"id\":1,\"concentracion\":1000,\"estado\":true}",
        "payloadType": "json",
        "x": 240,
        "y": 480,
        "wires": [
            [
                "e9174388a10ad829",
                "86a3598925e12381"
            ]
        ]
    },
    {
        "id": "e9174388a10ad829",
        "type": "mqtt out",
        "z": "74273795d1e74a6e",
        "g": "1db8133a62cab60c",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "70113bd572087aab",
        "x": 510,
        "y": 480,
        "wires": []
    },
    {
        "id": "63f76027b3399f33",
        "type": "inject",
        "z": "74273795d1e74a6e",
        "g": "1db8133a62cab60c",
        "name": "SIMULAR FUGA DE GAS PUNTO 2",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "admin123/punto2/sensores/fuga",
        "payload": "true",
        "payloadType": "bool",
        "x": 240,
        "y": 580,
        "wires": [
            [
                "7da0fb93c70ecbc9"
            ]
        ]
    },
    {
        "id": "7da0fb93c70ecbc9",
        "type": "mqtt out",
        "z": "74273795d1e74a6e",
        "g": "1db8133a62cab60c",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "70113bd572087aab",
        "x": 490,
        "y": 580,
        "wires": []
    },
    {
        "id": "1a601e7a6d191818",
        "type": "inject",
        "z": "74273795d1e74a6e",
        "g": "1db8133a62cab60c",
        "name": "SIMULAR FUGA DE GAS PUNTO 3",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "true",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "admin123/punto3/sensores/fuga",
        "x": 240,
        "y": 640,
        "wires": [
            [
                "f813178647af73dd"
            ]
        ]
    },
    {
        "id": "f813178647af73dd",
        "type": "mqtt out",
        "z": "74273795d1e74a6e",
        "g": "1db8133a62cab60c",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "70113bd572087aab",
        "x": 490,
        "y": 640,
        "wires": []
    },
    {
        "id": "6e84991db96a8aeb",
        "type": "inject",
        "z": "74273795d1e74a6e",
        "g": "969d8996b0110f16",
        "name": "Fuga",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 260,
        "wires": [
            [
                "037577b4694f7516"
            ]
        ]
    },
    {
        "id": "e53014b8fc5a1fc2",
        "type": "inject",
        "z": "74273795d1e74a6e",
        "g": "1db8133a62cab60c",
        "name": "SIMULAR FUGA DE GAS PUNTO 1",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "admin123/punto1/sensores/fuga",
        "payload": "{\"id\":1,\"concentracion\":100,\"estado\":false}",
        "payloadType": "json",
        "x": 250,
        "y": 520,
        "wires": [
            [
                "86a3598925e12381",
                "e9174388a10ad829"
            ]
        ]
    },
    {
        "id": "10b897910f81482b",
        "type": "switch",
        "z": "74273795d1e74a6e",
        "g": "969d8996b0110f16",
        "name": "",
        "property": "payload.estado",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "null"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 990,
        "y": 220,
        "wires": [
            [
                "1076149b27138956"
            ],
            [
                "1076149b27138956"
            ],
            [
                "807c738004bc73a3"
            ]
        ]
    },
    {
        "id": "807c738004bc73a3",
        "type": "change",
        "z": "74273795d1e74a6e",
        "g": "969d8996b0110f16",
        "name": "No consume",
        "rules": [
            {
                "t": "set",
                "p": "consumo",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 240,
        "wires": [
            [
                "1076149b27138956"
            ]
        ]
    },
    {
        "id": "86a3598925e12381",
        "type": "link out",
        "z": "74273795d1e74a6e",
        "g": "1db8133a62cab60c",
        "name": "Link envia fuga",
        "mode": "link",
        "links": [
            "bb6a6c959a605573"
        ],
        "x": 465,
        "y": 520,
        "wires": []
    },
    {
        "id": "bb6a6c959a605573",
        "type": "link in",
        "z": "74273795d1e74a6e",
        "g": "969d8996b0110f16",
        "name": "Link recibe fuga",
        "links": [
            "86a3598925e12381"
        ],
        "x": 695,
        "y": 300,
        "wires": [
            [
                "037577b4694f7516"
            ]
        ]
    },
    {
        "id": "5be65dbce585fe33",
        "type": "join",
        "z": "1fddb5bbb8ba27b8",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": true,
        "accumulate": true,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 490,
        "y": 300,
        "wires": [
            [
                "4542ed6e5cdbd9e2"
            ]
        ]
    },
    {
        "id": "df90f3d35b7476e3",
        "type": "inject",
        "z": "1fddb5bbb8ba27b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "temperature",
        "payload": "40",
        "payloadType": "num",
        "x": 260,
        "y": 240,
        "wires": [
            [
                "5be65dbce585fe33"
            ]
        ]
    },
    {
        "id": "3f7be114a53332cb",
        "type": "inject",
        "z": "1fddb5bbb8ba27b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "humidity",
        "payload": "33",
        "payloadType": "num",
        "x": 270,
        "y": 300,
        "wires": [
            [
                "5be65dbce585fe33"
            ]
        ]
    },
    {
        "id": "0ff794d961eb9804",
        "type": "inject",
        "z": "1fddb5bbb8ba27b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "pressure",
        "payload": "1000",
        "payloadType": "num",
        "x": 270,
        "y": 360,
        "wires": [
            [
                "5be65dbce585fe33"
            ]
        ]
    },
    {
        "id": "4542ed6e5cdbd9e2",
        "type": "debug",
        "z": "1fddb5bbb8ba27b8",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 300,
        "wires": []
    },
    {
        "id": "9086c2496534a3a8",
        "type": "comment",
        "z": "1fddb5bbb8ba27b8",
        "name": "Combining three payload into one object ",
        "info": "",
        "x": 520,
        "y": 180,
        "wires": []
    }
]